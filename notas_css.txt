Permite cambiar la apariencia del HTML modificando el 
 1.Tamaño
 2.Colore
 3.Actua sobre cualquier elemento 

 Se aplica mediante etiques y usando llaves {}

1.Se usa el selector el cual es una p,b,li,a,estructura
    p{
        Todo lo que esta dentro de las llaves es lo que se aplicará al selector

        Los dos juntos son conocidos como declaraciones: (color,font-size)
        Usa propiedades ->  color:valor ejemplo black
                            font-size : 20px -> px= pixeles que es la unidad
    }

2.Unidades:
    px, em, rem etc
    Otras unidades que puedes definir como unidad es:
        padding, margin, width, height se usan para controlar la dostancia entre elementos 

    Tambien existen unidades fijas como pixeles, centimetros y relativas es decir que toman su valor dependiendo del valor definido por otra propiedad

3.Para agregar una hoja de estilo al html usamos la etiqueta <style> </style> en el apartado de <head> </head> del html

4.pARA PODER ligar una hoja de estilo al html usamos link, rel = relation 
<link rel="stylesheet" href="CSS/app.css">




*****************Colores*****************
Se pueden definir colores en base a su nombre, por su valor hexadecimal hex, RGB, HSL HUGE SATURATION AN LIGHT
    Un colore puede utilizar combinación hexadecimal blanco #ffffff o negro #000000

Algunas aplicaciones como Photoshop p Adobe xd TE Permite obtener colores en base a cierta cantidad de un valor como son RGB y HSL, estos tambien son soportados por CSS

Tambien se puede añador transparencia con RGBA y HSLA y recientemente tambien es posible hacerlo por medio de RGB Y HSL  A = alfa





****************Selectores***********************
Los selectores CSS permiten identificar a qué elemento (o elementos) se aplicarán los estilos definidos en dicho bloque. Los más conocidos son los de etiqueta (p, ul) etc.

Por ejemplo en css a los elementos que esten dentro de un section a{ } aqui el selector seria el section el cual permitira modificar todas las anclas que esten dentro de ese apartado:

    footer a{
        text-transform: uppercase;
    }

Un pseudo selector es lo mismo pero despues de la etiqueta se agregan dps puntos: el cual nos da acceso a más funciones:

    /* first-child solo le aplica estilo al primer elemento */
    nth-child(3) -> permite seleccionar un elemento si ahi 5 elementos y selecciones el 3, al que este en esa posición lo modificará
        nav a:first-child{
            color: black;
        }

Css se queda con la ultima instrucción de arriba hacia abajo, mientras mas especifico sea el selector es más  provable que css lo tome en cuenta y es a lo que se le llama especificidad!!






******Especificidad pregunta para obtener un trabajo******************
Con la especificidad podemos saber que valores serán tomado en cuanta
por el navegador, dependiendo que que tan especifico sea nuestro SELECTOR 

css se escribe en casacada de arriba hacia abjo, dentro de la especificidad ahi clases i Id's, ambos se definen en el HTML, usando -> class o id

    1.class como caracteristica soporta 1 o más y tambien se puede reutilizar, en las clases si puede existir mas de una clase con el mismo nombre

    2.id solo se  puede asignar 1 por elemento HTML y tambien solo se debe de utilizar 1 por documento, puedes asignar varios pero cada uno con diferente nombre no con el mismo 

Utilizar clases y id's  en los selectores permite tener una especificidad mas alta 

Evitar crear selectores muy complicados, hará que el codigo sea mas dificil de mantener 

Se suele utilizar mas un class que un id. en css si son dos palabras es conveniente usar - medio para unirlas ejemplo casa-amarilla

Existe una calculadora de especificidad donde el rango mas bajo es una etiqueta, con dos selectore, despues una clase y el mayor peso es el id

        nav a{
            text-transform: uppercase;
        }

        /* PaRA SELECCIONAR UNA CLASE SE UNA UN PUNTO . */
        .navegacion a{
            text-transform: lowercase;
        }


        /* cuando es id agregas un # */
        #navegacion a{
            text-transform: capitalize;
        }

un id es mas pesado que una clase lo cual hace que sean mas lentos, lo recomendable es usar clases


    


    **********Agregando clases a los selectores**************
    ejemplo dentro de una nav podemo tener una clase y en cada ancla que exista modemos agregar las misma clase, dentro de uan clase puede haver dos clases;  
            <nav class="navegador color-rojo"> 
                <a class=" enlace" href="index.html">Inicio </a> 
            </nav>


    Nos podemos guiar con MODULOS: un modulo es definir un nav con una clase y dentro de esa clase contiene varias anclas las cuales estan dentro del nav eso es un modulo, BEM Y SMACSS




******************Box Model*************
pregunta de entrevista
En box model css todo es una caja, pero como sea esa caja y que medidas tenga depende de 4 cosas:
    1: Contenido
    2:Padding o relleno
    3:Borde
    4:Margin on margen 

Sin box model podriamos tener un resultado no deseado al usar estas propiedades.

box-sizing
    Content-box se adapta al width y al margin
    border-box se adata especificamente al ancho declarado en el width

Marging: es el espacio que se usa entre elementos y padding es el espacio que se utiliza dentro de un elemento

Nota: dependiendo del navegador que se use algunos agregan stilo css, lo cual podria hacer cambios en nuestro sitio web, para resolverlo podemos usar "Normalize.css" debemos de buscarlo en la web copiar el codigo, crear en css un archivo normalize y pegar el codigo de la pagina web normalize y eso nos ayudará a estandarizar el codigo creado en cualquier web o navegador para que este no cambie, debemos de asegurar no esta traducido al español

Normalize va antes de agregar el link de estilos css y no despues







******************+Displays en css*****************
Existen 3, todos los elementos ya contienen un display por defecto, unos elementos comparten el mism otros tienen otro
    Block: Un elemento de coloca debajo del otro sin importar su tamaño, se les pude aplicar width and height
    Inline: elementos a la derecha uno tras otro, a este no se le puede poner alto y ancho
    Inline-Block: Permite darle un width, height, margin a un elemento inline, lo que no es posible hacer en un elmento inline 

    Tambien esta el Display-flex y el grid




************Agrupando el codigo**********
Exiten atajos tanto para:
    Margin:50px 0 30px 20 px arriba, derecha, abajo e izquierda
    padding: los mismo que el marging para el padding 
    border: 1px solid #e1e1e1  ancho del border, si es solido(tipo), color




************Imagenes como backgroung*****************
Usando background-image o mediante CSS
Comunmente a las imagenes grandes en la ventana principal superior se les conoce como  HERO